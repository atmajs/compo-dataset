/*!
 * Dataset Component v0.9.10
 * Part of the Atma.js Project
 * http://atmajs.com/
 *
 * MIT license
 * http://opensource.org/licenses/MIT
 *
 * (c) 2012, 2015 Atma.js and other contributors
 */
"use strict";!function(t,n){var e="undefined"!=typeof global?global:window,i=e.mask||e.atma&&e.atma.mask;if(null==i){if("function"!=typeof require)throw Error("MaskJS was not loaded");mask=require("maskjs")}n(e,i,i.Compo.config.getDOMLibrary())}(void 0,function(t,n,e){var i;!function(){i=function(t){if(t.constructor!==Object&&0===t.constructor.length)return new t.constructor;var e,i,a={};for(e in t)i=t[e],n.is.Array(i)?a[e]=[]:n.is.Object(i)?a[e]={}:a[e]=null;return a}}();var a=n.Compo({tagName:"div",meta:{template:"merge"},attr:{style:"position: relative;"},slots:{datasetItemRemove:function(t){var n=this,i=e(t.target).model(),a=function(){n.find("Editor").remove(i).done(o).fail(r)},o=function(){n.find("#provider").removeEntity(i)},r=function(t){alert("Error "+t.message)};this.find("Confirmation").confirm("remove",i).done(a)},datasetItemEdit:function(t){var n=e(t.target).model();this.find("Editor").edit(n)},datasetItemNew:function(t){var n=this,e=this.createDataItem();this.find("Editor").edit(e).done(function(t){var e=n.find("#provider");e.addEntity&&e.addEntity(t)})}},filter:function(t){var n=this.find("#provider");n.filter&&n.filter(t)},activity:function(t){this.emitIn("datasetActivity",t)},onRenderStart:function(t,n,e){jmask(this).append("Activity; Confirmation;"),this.ensureDataProvider_()},createDataItem:function(){var t=this.find("#provider"),e=n.obj.get(t,"model.data.collection.0")||{};return i(e)},ensureDataProvider_:function(){null!=this.xEndpoint&&jmask(this).prepend("ModelDataProvider")}});n.registerFromTemplate("\n	// source Controls/Activity.mask\n	let Activity as (div.a-dataset-activity) {\n		\n		var activity = 0;\n		\n		slot datasetActivity (sender, diff) {\n			var count = this.scope.activity + diff;\n			if (count < 0) count = 0;\n			this.scope.activity = count;\n		}\n		\n		style {\n			.a-dataset-activity-backdrop {\n				position: absolute;\n				\n				top:0;\n				left:0;\n				width: 100%;\n				height: 100%;\n				background: rgba(255,255,255, .8);\n				z-index: 100;\n			}\n			.a-dataset-activity-spinner {\n				width: 40px;\n				height: 40px;\n			  \n				position: relative;\n				margin: auto;\n			}\n			.a-dataset-activity-bounce1, .a-dataset-activity-bounce2 {\n				width: 100%;\n				height: 100%;\n				border-radius: 50%;\n				background-color: #27ae60;\n				opacity: 0.6;\n				position: absolute;\n				top: 0;\n				left: 0;			\n				-webkit-animation: bounce 2.0s infinite ease-in-out;\n				animation: bounce 2.0s infinite ease-in-out;\n			}		\n			.a-dataset-activity-bounce2 {\n				-webkit-animation-delay: -1.0s;\n				animation-delay: -1.0s;\n			}\n			\n			@-webkit-keyframes bounce {\n				0%, 100% { -webkit-transform: scale(0.0) }\n				50% { -webkit-transform: scale(1.0) }\n			}\n			\n			@keyframes bounce {\n				0%, 100% { \n					transform: scale(0.0);\n					-webkit-transform: scale(0.0);\n				} 50% { \n					transform: scale(1.0);\n					-webkit-transform: scale(1.0);\n				}\n			}\n		}\n		\n		+if ($scope.activity > 0) {		\n			.a-dataset-activity-backdrop >\n				.a-dataset-activity-spinner {\n					.a-dataset-activity-bounce1;\n					.a-dataset-activity-bounce2;\n				}\n		}\n	}\n	// end:source Controls/Activity.mask\n	// source Controls/Confirmation.mask\n	let Confirmation {\n		\n		function confirm(type, model) {\n			var compo = this;\n			return mask.class.Deferred.run(function(resolve, reject){\n	\n				var msg = compo.getMessage_(type, model);\n				var confirmed = confirm(msg);\n	\n				if (confirmed) {\n					return resolve();\n				}\n				reject();\n			});\n		}\n	\n		function getMessage_(type, model) {\n			if ('remove' === type)\n				return 'Are you sure to remove the item?';\n		}\n		\n	}\n	// end:source Controls/Confirmation.mask\n	// source Controls/Dialog.mask\n	let Dialog {\n		\n		function show () {\n			this.$.modal('show');\n		}\n		function hide () {\n			this.$.modal('hide');\n		}\n		\n		slot datasetEditorOpen () {\n			this.show();\n			return false;\n		}\n		\n		slot datasetEditorClose () {\n			this.hide();\n			return false;\n		}\n		\n		slot complete () {\n			this.hide();\n		}\n		\n		.modal.fade > .modal-dialog.modal-lg > .modal-content {\n				.modal-header {\n					\n					button.close data-dismiss= modal > span > 'x';\n					h4 .modal-title {\n						'Â ' @title;\n					}\n				}\n				@body > .modal-body style='position:relative; height:@attr.height' > @placeholder;\n				.modal-footer {\n					@footer;\n				}\n			}\n	}\n	// end:source Controls/Dialog.mask\n	// source Controls/Table.mask\n	let Table {\n		\n		let Item {\n			tr {\n				@each (row) {\n					td > @placeholder;\n				}\n				td {\n					@if (actions) {\n						@actions;\n					}\n					@else {\n						a .btn.btn-sm title='Edit'   x-tap=datasetItemEdit   > i.glyphicon.glyphicon-pencil;\n						a .btn.btn-sm title='Remove' x-tap=datasetItemRemove > i.glyphicon.glyphicon-trash;\n					}\n				}\n			}\n		}\n		\n		table.table.table-striped.table-hover {\n			thead > tr {\n				@each (head) {\n		    		th > @placeholder;\n		    	}\n				th > ''\n		    }\n		    tbody {\n		    	+each(data.collection) > @template;\n			}\n		}\n	}\n	// end:source Controls/Table.mask\n	// source Controls/List.mask\n	let List as (ul.unstyled) {\n	\n		let Actions {\n			a .btn.btn-sm title='Edit'   x-tap=datasetItemEdit   > i.glyphicon.glyphicon-pencil;\n			a .btn.btn-sm title='Remove' x-tap=datasetItemRemove > i.glyphicon.glyphicon-trash;\n		}\n		\n		+each(data.collection) > li > @template;\n	}\n	// end:source Controls/List.mask\n",a),function(){var t=n.Compo(n["class"].Deferred,{tagName:"div",meta:{mode:"client",template:"merge"},attr:{"class":"a-dataset-editor"},compos:{form:"compo: a:form"},slots:{complete:function(t,n){this.resolve(n)},error:function(t){var n=function(n,e){return t.apply(this,arguments)};return n.toString=function(){return t.toString()},n}(function(t,n){this.reject(n)})},onRenderStart:function(t,n,e,i){this.model={}},onRenderEnd:function(){null==this.compos.form&&console.warn("Dataset Component. When using `Editor`, it must contain `a:form` component")},edit:function(t){return this.defer(),this.compos.form.setEntity(t),this.emitIn("datasetEditorOpen"),this},remove:function(t){return this.defer(),this.compos.form.removeEntity(t),this}});n.registerHandler(a,"Editor",t)}(),function(){var t={attr:{id:"provider"},filterQuery:null,meta:{template:"merge",attributes:{endpoint:"string","enable-ruta":!0}},slots:{datasetFilter:function(t,n){this.filter(n)}},filter:function(t){for(var n in this.filterQuery)(null==t||void 0===t[n])&&(this.filterQuery[n]=null);null!=t&&(this.filterQuery=t),this.load_()},aDataset:null,onRenderStart:function(t,n,e,i){this.model={data:{collection:null},activity:0},this.aDataset=this.closest("a:dataset"),this.readQuery_(),this.onRenderStart_(),this.load_()},onRenderStart_:function(){},addEntity:function(t){var n=this.model.data.collection;null==n&&(n=this.model.data.collection=[]),n.push(t)},removeEntity:function(t){var n=this.model.data.collection,e=n.indexOf(t);n.splice(e,1)},readQuery_:function(){function t(t,n){var i=e[t];null!=i&&(i=parseInt(i),isNaN(i)||n(i))}var n=this;if("undefined"!=typeof ruta&&this.xEnableRuta===!0){var e=ruta._.query.get();if(null!=e){t(this.xQueryPageNum,function(t){return n.model.pageNum=t}),t(this.xQueryPageSize,function(t){return n.model.pageSize=t});for(var i in e)i!==this.xQueryPageNum&&i!==this.xQueryPageSize&&(null==this.filterQuery&&(this.filterQuery={}),this.filterQuery[i]=e[i])}}},activity_:function(t){this.aDataset.activity(t)},load_:function(){var t=this;this.activity_(1);var n=this.createQuery_();if(this.filterQuery)for(var i in this.filterQuery)n[i]=this.filterQuery[i];return"undefined"!=typeof ruta&&this.xEnableRuta&&ruta.navigate(n,{extend:!0}),e.getJSON(this.xEndpoint,n).done(function(n){t.setData_(n),t.activity_(-1)})},createQuery_:function(){return{}},setData_:function(t){throw Error("Not Implemented")}},i=Compo({aDataset:null,onRenderStart:function(t){var e=n.Utils.Expression.eval(this.expression,t);this.model={data:{collection:e}},this.aDataset=this.closest("a:dataset"),this.aDataset.data=this.model.data},addEntity:function(t){var n=this.model.data.collection;n&&n.push(t)}});n.registerHandler(a,"Model",i);var o=function(t,n,e){return Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0})},r=Compo(t,{template:"\n		// source Pager.mask\n		@placeholder;\n		\n		.a-dataset-pager {\n			i.glyphicon.glyphicon-road;\n			.shadow-z-1 {\n				style scoped {\n					:host {\n						display: inline;\n						margin: 0px 10px;\n						padding: 10px 20px;\n						background: white;\n						color: gray;\n					}\n				}\n				\n				+if (activity === 0) {\n				\n					span > +if (pageNum != 1) {\n						button.btn.btn-sm x-tap=datasetPagePrev >\n							i.glyphicon.glyphicon-arrow-left;\n					}\n					span > b > ' ~[bind: pageNum]/~[bind: pageTotal]'\n			\n					span > +if (isLastPage != true) {\n						button.btn.btn-sm x-tap=datasetPageNext >\n							i.glyphicon.glyphicon-arrow-right;\n					}\n				}\n				else {\n					button.btn.btn-sm > i.fa.fa-circle-o-notch.fa-spin;\n				}\n			}\n		}\n		// end:source Pager.mask\n	",attr:{id:"provider"},filterQuery:null,meta:{attributes:{"page-num":{"default":1},"page-size":{"default":10},"query-page-num":"page","query-page-size":"size","prop-collection":"collection","prop-is-last":"","prop-total":"total"}},slots:{datasetPagePrev:function(){this.go_(-1)},datasetPageNext:function(){this.go_(1)}},filter:function(n){this.model.pageNum=1,t.filter.call(this,n)},aDataset:null,onRenderStart_:function(){this.model=n.obj.extend(this.model,{pageNum:this.xPageNum,pageSize:this.xPageSize,pageTotal:null,isLastPage:!1})},go_:function(t){this.model.pageNum+=t,this.load_()},createQuery_:function(){var t=this;return function(){var n={};return o(n,t.xQueryPageNum,t.model.pageNum),o(n,t.xQueryPageSize,t.model.pageSize),n}()},setData_:function(t){this.model.data.collection=t[this.xPropCollection];var n=!1;if(this.xPropIsLast)n=t[this.xPropIsLast];else if(this.xPropTotal){var e=this.model.pageNum*this.model.pageSize;e>=t[this.xPropTotal]&&(n=!0)}else this.model.data.collection.length<this.xPageSize&&(n=!0);this.model.pageTotal=Math.ceil(t[this.xPropTotal]/this.xPageSize),this.model.isLastPage=n}});n.registerHandler(a,"Pager",r);var s=Compo(t,{setData_:function(t){this.model.data.collection=t}});n.registerHandler(a,"Collection",s)}(),n.registerHandler("a:dataset",a)});
//# sourceMappingURL=dataset.min.js.map